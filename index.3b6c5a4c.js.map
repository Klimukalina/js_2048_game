{"mappings":"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","sources":["<anon>","src/scripts/main.js","src/modules/Game.class.js","node_modules/@swc/helpers/esm/_class_call_check.js","node_modules/@swc/helpers/esm/_create_class.js","node_modules/@swc/helpers/esm/_define_property.js","node_modules/@swc/helpers/esm/_sliced_to_array.js","node_modules/@swc/helpers/esm/_array_with_holes.js","node_modules/@swc/helpers/esm/_iterable_to_array_limit.js","node_modules/@swc/helpers/esm/_non_iterable_rest.js","node_modules/@swc/helpers/esm/_unsupported_iterable_to_array.js","node_modules/@swc/helpers/esm/_array_like_to_array.js","node_modules/@swc/helpers/esm/_to_consumable_array.js","node_modules/@swc/helpers/esm/_array_without_holes.js","node_modules/@swc/helpers/esm/_iterable_to_array.js","node_modules/@swc/helpers/esm/_non_iterable_spread.js"],"sourcesContent":["(function () {\nvar $3d28d7f1aac198f5$exports = {};\nfunction $8713978b2328d32b$export$71511d61b312f219(instance, Constructor) {\n    if (!(instance instanceof Constructor)) throw new TypeError(\"Cannot call a class as a function\");\n}\n\n\nfunction $4fc75ccb937ab1df$var$_defineProperties(target, props) {\n    for(var i = 0; i < props.length; i++){\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\nfunction $4fc75ccb937ab1df$export$71511d61b312f219(Constructor, protoProps, staticProps) {\n    if (protoProps) $4fc75ccb937ab1df$var$_defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) $4fc75ccb937ab1df$var$_defineProperties(Constructor, staticProps);\n    return Constructor;\n}\n\n\nfunction $cd5a47cf8ef6d766$export$71511d61b312f219(obj, key, value) {\n    if (key in obj) Object.defineProperty(obj, key, {\n        value: value,\n        enumerable: true,\n        configurable: true,\n        writable: true\n    });\n    else obj[key] = value;\n    return obj;\n}\n\n\nfunction $09cbfe85151ea6c6$export$71511d61b312f219(arr) {\n    if (Array.isArray(arr)) return arr;\n}\n\n\nfunction $8ca2848f896a6803$export$71511d61b312f219(arr, i) {\n    var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n    if (_i == null) return;\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _s, _e;\n    try {\n        for(_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true){\n            _arr.push(_s.value);\n            if (i && _arr.length === i) break;\n        }\n    } catch (err) {\n        _d = true;\n        _e = err;\n    } finally{\n        try {\n            if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n        } finally{\n            if (_d) throw _e;\n        }\n    }\n    return _arr;\n}\n\n\nfunction $a0bc1859061deae1$export$71511d61b312f219() {\n    throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\n\nfunction $c3b10a83b523f372$export$71511d61b312f219(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\n\n\nfunction $d4f69c5c6c4654b1$export$71511d61b312f219(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return (0, $c3b10a83b523f372$export$71511d61b312f219)(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return (0, $c3b10a83b523f372$export$71511d61b312f219)(o, minLen);\n}\n\n\nfunction $efec029548ccee7f$export$71511d61b312f219(arr, i) {\n    return (0, $09cbfe85151ea6c6$export$71511d61b312f219)(arr) || (0, $8ca2848f896a6803$export$71511d61b312f219)(arr, i) || (0, $d4f69c5c6c4654b1$export$71511d61b312f219)(arr, i) || (0, $a0bc1859061deae1$export$71511d61b312f219)();\n}\n\n\n\nfunction $c50969dc1df61e8b$export$71511d61b312f219(arr) {\n    if (Array.isArray(arr)) return (0, $c3b10a83b523f372$export$71511d61b312f219)(arr);\n}\n\n\nfunction $09c9f293d010c0e1$export$71511d61b312f219(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\n\n\nfunction $38c2d4931cb7a7c4$export$71511d61b312f219() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\n\n\nfunction $227c6742e0ff6f82$export$71511d61b312f219(arr) {\n    return (0, $c50969dc1df61e8b$export$71511d61b312f219)(arr) || (0, $09c9f293d010c0e1$export$71511d61b312f219)(arr) || (0, $d4f69c5c6c4654b1$export$71511d61b312f219)(arr) || (0, $38c2d4931cb7a7c4$export$71511d61b312f219)();\n}\n\n\n\"use strict\";\nvar $3d28d7f1aac198f5$var$Game = /*#__PURE__*/ function() {\n    function Game() {\n        var initialState = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : [\n            [\n                0,\n                0,\n                0,\n                0\n            ],\n            [\n                0,\n                0,\n                0,\n                0\n            ],\n            [\n                0,\n                0,\n                0,\n                0\n            ],\n            [\n                0,\n                0,\n                0,\n                0\n            ]\n        ];\n        (0, $8713978b2328d32b$export$71511d61b312f219)(this, Game);\n        this.status = Game.STATUS.IDLE;\n        this.initialState = initialState;\n        this.score = 0;\n        this.state = initialState.map(function(row) {\n            return (0, $227c6742e0ff6f82$export$71511d61b312f219)(row);\n        });\n    }\n    (0, $4fc75ccb937ab1df$export$71511d61b312f219)(Game, [\n        {\n            key: \"getScore\",\n            value: function getScore() {\n                return this.score;\n            }\n        },\n        {\n            key: \"getState\",\n            value: function getState() {\n                return this.state;\n            }\n        },\n        {\n            key: \"getStatus\",\n            value: function getStatus() {\n                return this.status;\n            }\n        },\n        {\n            key: \"start\",\n            value: function start() {\n                this.status = Game.STATUS.PLAYING;\n                this.state = this.initialState.map(function(row) {\n                    return (0, $227c6742e0ff6f82$export$71511d61b312f219)(row);\n                });\n                this.addNewNumber();\n                this.addNewNumber();\n            }\n        },\n        {\n            key: \"restart\",\n            value: function restart() {\n                this.status = Game.STATUS.IDLE;\n                this.state = this.initialState.map(function(row) {\n                    return (0, $227c6742e0ff6f82$export$71511d61b312f219)(row);\n                });\n                this.score = 0;\n            }\n        },\n        {\n            key: \"addNewNumber\",\n            value: function addNewNumber() {\n                var emptyPositions = this.getEmptyPositions();\n                // If there are no empty positions, we cannot add a new number.\n                if (emptyPositions.length === 0) return;\n                var randomIndex = Math.floor(Math.random() * emptyPositions.length);\n                var _emptyPositions_randomIndex = (0, $efec029548ccee7f$export$71511d61b312f219)(emptyPositions[randomIndex], 2), row = _emptyPositions_randomIndex[0], col = _emptyPositions_randomIndex[1];\n                this.state[row][col] = Math.random() < 0.9 ? 2 : 4;\n            }\n        },\n        {\n            key: \"getEmptyPositions\",\n            value: function getEmptyPositions() {\n                var emptyPositions = [];\n                for(var row = 0; row < 4; row++){\n                    for(var col = 0; col < 4; col++)if (this.state[row][col] === 0) emptyPositions.push([\n                        row,\n                        col\n                    ]);\n                }\n                return emptyPositions;\n            }\n        },\n        {\n            key: \"toWin\",\n            value: function toWin() {\n                return this.state.some(function(row) {\n                    return row.includes(2048);\n                });\n            }\n        },\n        {\n            key: \"toLose\",\n            value: function toLose() {\n                for(var row = 0; row < this.state.length; row++)for(var col = 0; col < this.state[row].length; col++){\n                    if (this.state[row][col] === 0) return false;\n                    if (row > 0 && this.state[row][col] === this.state[row - 1][col]) return false;\n                    if (row < this.state.length - 1 && this.state[row][col] === this.state[row + 1][col]) return false;\n                    if (col > 0 && this.state[row][col] === this.state[row][col - 1]) return false;\n                    if (col < this.state[row].length - 1 && this.state[row][col] === this.state[row][col + 1]) return false;\n                }\n                return true;\n            }\n        },\n        {\n            key: \"handleMove\",\n            value: function handleMove(moved) {\n                if (moved) this.addNewNumber();\n                if (this.toWin()) this.status = Game.STATUS.WIN;\n                else if (this.toLose()) this.status = Game.STATUS.LOSE;\n            }\n        },\n        {\n            key: \"moveLeft\",\n            value: function moveLeft() {\n                if (this.status === Game.STATUS.PLAYING) {\n                    var size = this.state.length;\n                    var moved = false;\n                    for(var row = 0; row < size; row++){\n                        var newRow = [];\n                        var merged = Array(size).fill(false);\n                        for(var col = 0; col < size; col++)if (this.state[row][col] !== 0) newRow.push(this.state[row][col]);\n                        for(var i = 0; i < newRow.length - 1; i++)if (newRow[i] === newRow[i + 1] && !merged[i] && !merged[i + 1]) {\n                            newRow[i] *= 2;\n                            this.score += newRow[i];\n                            newRow.splice(i + 1, 1);\n                            merged[i] = true;\n                        }\n                        while(newRow.length < size)newRow.push(0);\n                        for(var col1 = 0; col1 < size; col1++)if (this.state[row][col1] !== newRow[col1]) {\n                            this.state[row][col1] = newRow[col1];\n                            moved = true;\n                        }\n                    }\n                    this.handleMove(moved);\n                }\n            }\n        },\n        {\n            key: \"moveRight\",\n            value: function moveRight() {\n                if (this.status === Game.STATUS.PLAYING) {\n                    var size = this.state.length;\n                    var moved = false;\n                    for(var row = 0; row < size; row++){\n                        var newRow = [];\n                        var merged = Array(size).fill(false);\n                        for(var col = 0; col < size; col++)if (this.state[row][col] !== 0) newRow.push(this.state[row][col]);\n                        for(var i = newRow.length - 1; i > 0; i--)if (newRow[i] === newRow[i - 1] && !merged[i] && !merged[i - 1]) {\n                            newRow[i] *= 2;\n                            this.score += newRow[i];\n                            newRow.splice(i - 1, 1);\n                            merged[i] = true;\n                        }\n                        while(newRow.length < size)newRow.unshift(0);\n                        for(var col1 = 0; col1 < size; col1++)if (this.state[row][col1] !== newRow[col1]) {\n                            this.state[row][col1] = newRow[col1];\n                            moved = true;\n                        }\n                    }\n                    this.handleMove(moved);\n                }\n            }\n        },\n        {\n            key: \"moveUp\",\n            value: function moveUp() {\n                if (this.getStatus() === Game.STATUS.PLAYING) {\n                    var size = this.state.length;\n                    var moved = false;\n                    for(var col = 0; col < size; col++){\n                        var newColumn = [];\n                        for(var row = 0; row < size; row++)if (this.state[row][col] !== 0) newColumn.push(this.state[row][col]);\n                        for(var i = 0; i < newColumn.length - 1; i++)if (newColumn[i] === newColumn[i + 1]) {\n                            newColumn[i] *= 2;\n                            this.score += newColumn[i];\n                            newColumn.splice(i + 1, 1);\n                        }\n                        while(newColumn.length < size)newColumn.push(0);\n                        for(var row1 = 0; row1 < size; row1++)if (this.state[row1][col] !== newColumn[row1]) {\n                            this.state[row1][col] = newColumn[row1];\n                            moved = true;\n                        }\n                    }\n                    this.handleMove(moved);\n                }\n            }\n        },\n        {\n            key: \"moveDown\",\n            value: function moveDown() {\n                if (this.getStatus() === Game.STATUS.PLAYING) {\n                    var size = this.state.length;\n                    var moved = false;\n                    for(var col = 0; col < size; col++){\n                        var newColumn = [];\n                        for(var row = 0; row < size; row++)if (this.state[row][col] !== 0) newColumn.push(this.state[row][col]);\n                        var merged = Array(newColumn.length).fill(false);\n                        for(var i = newColumn.length - 1; i > 0; i--)if (newColumn[i] === newColumn[i - 1] && !merged[i] && !merged[i - 1]) {\n                            newColumn[i] *= 2;\n                            this.score += newColumn[i];\n                            newColumn.splice(i - 1, 1);\n                            merged[i] = true;\n                        }\n                        while(newColumn.length < size)newColumn.unshift(0);\n                        for(var row1 = 0; row1 < size; row1++)if (this.state[row1][col] !== newColumn[row1]) {\n                            this.state[row1][col] = newColumn[row1];\n                            moved = true;\n                        }\n                    }\n                    this.handleMove(moved);\n                }\n            }\n        }\n    ]);\n    return Game;\n}();\n(0, $cd5a47cf8ef6d766$export$71511d61b312f219)($3d28d7f1aac198f5$var$Game, \"STATUS\", {\n    IDLE: \"idle\",\n    PLAYING: \"playing\",\n    WIN: \"win\",\n    LOSE: \"lose\"\n});\n$3d28d7f1aac198f5$exports = $3d28d7f1aac198f5$var$Game;\n\n\nvar $197cd56b15c33885$var$game = new $3d28d7f1aac198f5$exports();\nvar $197cd56b15c33885$var$_ref = {\n    startButton: document.querySelector(\".start\"),\n    gameScore: document.querySelector(\".game-score\"),\n    gameBoardRows: document.querySelectorAll(\"tr\"),\n    messageLose: document.querySelector(\".message-lose\"),\n    messageWin: document.querySelector(\".message-win\"),\n    messageStart: document.querySelector(\".message-start\")\n}, $197cd56b15c33885$var$startButton = $197cd56b15c33885$var$_ref.startButton, $197cd56b15c33885$var$gameScore = $197cd56b15c33885$var$_ref.gameScore, $197cd56b15c33885$var$gameBoardRows = $197cd56b15c33885$var$_ref.gameBoardRows, $197cd56b15c33885$var$messageLose = $197cd56b15c33885$var$_ref.messageLose, $197cd56b15c33885$var$messageWin = $197cd56b15c33885$var$_ref.messageWin, $197cd56b15c33885$var$messageStart = $197cd56b15c33885$var$_ref.messageStart;\nvar $197cd56b15c33885$var$updateGameFields = function() {\n    var state = $197cd56b15c33885$var$game.getState();\n    $197cd56b15c33885$var$gameBoardRows.forEach(function(row, rowIndex) {\n        var _iteratorNormalCompletion = true, _didIteratorError = false, _iteratorError = undefined;\n        try {\n            for(var _iterator = row.cells[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true){\n                var cell = _step.value;\n                cell.textContent = \"\";\n                cell.className = \"field-cell\";\n                var cellIndex = cell.cellIndex;\n                var cellValue = state[rowIndex][cellIndex];\n                if (cellValue !== 0) {\n                    cell.textContent = cellValue;\n                    cell.classList.add(\"\".concat(cell.className, \"--\").concat(cellValue));\n                }\n            }\n        } catch (err) {\n            _didIteratorError = true;\n            _iteratorError = err;\n        } finally{\n            try {\n                if (!_iteratorNormalCompletion && _iterator.return != null) {\n                    _iterator.return();\n                }\n            } finally{\n                if (_didIteratorError) {\n                    throw _iteratorError;\n                }\n            }\n        }\n    });\n};\nvar $197cd56b15c33885$var$updateMessage = function() {\n    $197cd56b15c33885$var$messageLose.classList.add(\"hidden\");\n    $197cd56b15c33885$var$messageWin.classList.add(\"hidden\");\n    $197cd56b15c33885$var$messageStart.classList.add(\"hidden\");\n    if ($197cd56b15c33885$var$game.getStatus() === \"win\") $197cd56b15c33885$var$messageWin.classList.remove(\"hidden\");\n    else if ($197cd56b15c33885$var$game.getStatus() === \"lose\") $197cd56b15c33885$var$messageLose.classList.remove(\"hidden\");\n    else if ($197cd56b15c33885$var$game.getStatus() === \"idle\") $197cd56b15c33885$var$messageStart.classList.remove(\"hidden\");\n};\nvar $197cd56b15c33885$var$updateScore = function() {\n    $197cd56b15c33885$var$gameScore.textContent = $197cd56b15c33885$var$game.getScore();\n};\nvar $197cd56b15c33885$var$startGame = function() {\n    if ($197cd56b15c33885$var$startButton.textContent === \"Start\") $197cd56b15c33885$var$game.start();\n    if ($197cd56b15c33885$var$startButton.textContent === \"Restart\") {\n        $197cd56b15c33885$var$game.restart();\n        $197cd56b15c33885$var$startButton.textContent = \"Start\";\n        $197cd56b15c33885$var$startButton.classList.remove(\"restart\");\n        $197cd56b15c33885$var$startButton.classList.add(\"start\");\n        $197cd56b15c33885$var$updateScore();\n    }\n    $197cd56b15c33885$var$updateGameFields();\n    $197cd56b15c33885$var$updateMessage();\n    $197cd56b15c33885$var$isFirstMove = true;\n};\nvar $197cd56b15c33885$var$isFirstMove = true;\nvar $197cd56b15c33885$var$handleArrowDown = function(e) {\n    if ($197cd56b15c33885$var$game.getStatus() === \"idle\") return;\n    switch(e.key){\n        case \"ArrowLeft\":\n            $197cd56b15c33885$var$game.moveLeft();\n            break;\n        case \"ArrowRight\":\n            $197cd56b15c33885$var$game.moveRight();\n            break;\n        case \"ArrowUp\":\n            $197cd56b15c33885$var$game.moveUp();\n            break;\n        case \"ArrowDown\":\n            $197cd56b15c33885$var$game.moveDown();\n            break;\n    }\n    if ($197cd56b15c33885$var$isFirstMove) {\n        $197cd56b15c33885$var$startButton.textContent = \"Restart\";\n        $197cd56b15c33885$var$startButton.classList.remove(\"start\");\n        $197cd56b15c33885$var$startButton.classList.add(\"restart\");\n        $197cd56b15c33885$var$isFirstMove = false;\n    }\n    $197cd56b15c33885$var$updateMessage();\n    $197cd56b15c33885$var$updateGameFields();\n    $197cd56b15c33885$var$updateScore();\n};\n$197cd56b15c33885$var$startButton.addEventListener(\"click\", $197cd56b15c33885$var$startGame);\ndocument.addEventListener(\"keydown\", $197cd56b15c33885$var$handleArrowDown);\n\n})();\n//# sourceMappingURL=index.3b6c5a4c.js.map\n","const Game = require('../modules/Game.class');\nconst game = new Game();\n\nconst {\n  startButton,\n  gameScore,\n  gameBoardRows,\n  messageLose,\n  messageWin,\n  messageStart,\n} = {\n  startButton: document.querySelector('.start'),\n  gameScore: document.querySelector('.game-score'),\n  gameBoardRows: document.querySelectorAll('tr'),\n  messageLose: document.querySelector('.message-lose'),\n  messageWin: document.querySelector('.message-win'),\n  messageStart: document.querySelector('.message-start'),\n};\n\nconst updateGameFields = () => {\n  const state = game.getState();\n\n  gameBoardRows.forEach((row, rowIndex) => {\n    for (const cell of row.cells) {\n      cell.textContent = '';\n      cell.className = 'field-cell';\n\n      const cellIndex = cell.cellIndex;\n      const cellValue = state[rowIndex][cellIndex];\n\n      if (cellValue !== 0) {\n        cell.textContent = cellValue;\n        cell.classList.add(`${cell.className}--${cellValue}`);\n      }\n    }\n  });\n};\n\nconst updateMessage = () => {\n  messageLose.classList.add('hidden');\n  messageWin.classList.add('hidden');\n  messageStart.classList.add('hidden');\n\n  if (game.getStatus() === 'win') {\n    messageWin.classList.remove('hidden');\n  } else if (game.getStatus() === 'lose') {\n    messageLose.classList.remove('hidden');\n  } else if (game.getStatus() === 'idle') {\n    messageStart.classList.remove('hidden');\n  }\n};\n\nconst updateScore = () => {\n  gameScore.textContent = game.getScore();\n};\n\nconst startGame = () => {\n  if (startButton.textContent === 'Start') {\n    game.start();\n  }\n\n  if (startButton.textContent === 'Restart') {\n    game.restart();\n\n    startButton.textContent = 'Start';\n    startButton.classList.remove('restart');\n    startButton.classList.add('start');\n    updateScore();\n  }\n\n  updateGameFields();\n  updateMessage();\n\n  isFirstMove = true;\n};\n\nlet isFirstMove = true;\n\nconst handleArrowDown = (e) => {\n  if (game.getStatus() === 'idle') {\n    return;\n  }\n\n  switch (e.key) {\n    case 'ArrowLeft':\n      game.moveLeft();\n      break;\n    case 'ArrowRight':\n      game.moveRight();\n      break;\n    case 'ArrowUp':\n      game.moveUp();\n      break;\n    case 'ArrowDown':\n      game.moveDown();\n      break;\n  }\n\n  if (isFirstMove) {\n    startButton.textContent = 'Restart';\n    startButton.classList.remove('start');\n    startButton.classList.add('restart');\n    isFirstMove = false;\n  }\n\n  updateMessage();\n  updateGameFields();\n  updateScore();\n};\n\nstartButton.addEventListener('click', startGame);\ndocument.addEventListener('keydown', handleArrowDown);\n","'use strict';\n\nclass Game {\n  static STATUS = {\n    IDLE: 'idle',\n    PLAYING: 'playing',\n    WIN: 'win',\n    LOSE: 'lose',\n  };\n\n  constructor(\n    initialState = [\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n    ],\n  ) {\n    this.status = Game.STATUS.IDLE;\n    this.initialState = initialState;\n    this.score = 0;\n    this.state = initialState.map((row) => [...row]);\n  }\n\n  getScore() {\n    return this.score;\n  }\n\n  getState() {\n    return this.state;\n  }\n\n  getStatus() {\n    return this.status;\n  }\n\n  start() {\n    this.status = Game.STATUS.PLAYING;\n    this.state = this.initialState.map((row) => [...row]);\n    this.addNewNumber();\n    this.addNewNumber();\n  }\n\n  restart() {\n    this.status = Game.STATUS.IDLE;\n    this.state = this.initialState.map((row) => [...row]);\n    this.score = 0;\n  }\n\n  addNewNumber() {\n    const emptyPositions = this.getEmptyPositions();\n\n    // If there are no empty positions, we cannot add a new number.\n    if (emptyPositions.length === 0) {\n      return;\n    }\n\n    const randomIndex = Math.floor(Math.random() * emptyPositions.length);\n    const [row, col] = emptyPositions[randomIndex];\n\n    this.state[row][col] = Math.random() < 0.9 ? 2 : 4;\n  }\n\n  getEmptyPositions() {\n    const emptyPositions = [];\n\n    for (let row = 0; row < 4; row++) {\n      for (let col = 0; col < 4; col++) {\n        if (this.state[row][col] === 0) {\n          emptyPositions.push([row, col]);\n        }\n      }\n    }\n\n    return emptyPositions;\n  }\n\n  toWin() {\n    return this.state.some((row) => row.includes(2048));\n  }\n\n  toLose() {\n    for (let row = 0; row < this.state.length; row++) {\n      for (let col = 0; col < this.state[row].length; col++) {\n        if (this.state[row][col] === 0) {\n          return false;\n        }\n\n        if (row > 0 && this.state[row][col] === this.state[row - 1][col]) {\n          return false;\n        }\n\n        if (\n          row < this.state.length - 1 &&\n          this.state[row][col] === this.state[row + 1][col]\n        ) {\n          return false;\n        }\n\n        if (col > 0 && this.state[row][col] === this.state[row][col - 1]) {\n          return false;\n        }\n\n        if (\n          col < this.state[row].length - 1 &&\n          this.state[row][col] === this.state[row][col + 1]\n        ) {\n          return false;\n        }\n      }\n    }\n\n    return true;\n  }\n\n  handleMove(moved) {\n    if (moved) {\n      this.addNewNumber();\n    }\n\n    if (this.toWin()) {\n      this.status = Game.STATUS.WIN;\n    } else if (this.toLose()) {\n      this.status = Game.STATUS.LOSE;\n    }\n  }\n\n  moveLeft() {\n    if (this.status === Game.STATUS.PLAYING) {\n      const size = this.state.length;\n      let moved = false;\n\n      for (let row = 0; row < size; row++) {\n        const newRow = [];\n        const merged = Array(size).fill(false);\n\n        for (let col = 0; col < size; col++) {\n          if (this.state[row][col] !== 0) {\n            newRow.push(this.state[row][col]);\n          }\n        }\n\n        for (let i = 0; i < newRow.length - 1; i++) {\n          if (newRow[i] === newRow[i + 1] && !merged[i] && !merged[i + 1]) {\n            newRow[i] *= 2;\n            this.score += newRow[i];\n            newRow.splice(i + 1, 1);\n            merged[i] = true;\n          }\n        }\n\n        while (newRow.length < size) {\n          newRow.push(0);\n        }\n\n        for (let col = 0; col < size; col++) {\n          if (this.state[row][col] !== newRow[col]) {\n            this.state[row][col] = newRow[col];\n            moved = true;\n          }\n        }\n      }\n      this.handleMove(moved);\n    }\n  }\n\n  moveRight() {\n    if (this.status === Game.STATUS.PLAYING) {\n      const size = this.state.length;\n      let moved = false;\n\n      for (let row = 0; row < size; row++) {\n        const newRow = [];\n        const merged = Array(size).fill(false);\n\n        for (let col = 0; col < size; col++) {\n          if (this.state[row][col] !== 0) {\n            newRow.push(this.state[row][col]);\n          }\n        }\n\n        for (let i = newRow.length - 1; i > 0; i--) {\n          if (newRow[i] === newRow[i - 1] && !merged[i] && !merged[i - 1]) {\n            newRow[i] *= 2;\n            this.score += newRow[i];\n            newRow.splice(i - 1, 1);\n            merged[i] = true;\n          }\n        }\n\n        while (newRow.length < size) {\n          newRow.unshift(0);\n        }\n\n        for (let col = 0; col < size; col++) {\n          if (this.state[row][col] !== newRow[col]) {\n            this.state[row][col] = newRow[col];\n            moved = true;\n          }\n        }\n      }\n      this.handleMove(moved);\n    }\n  }\n\n  moveUp() {\n    if (this.getStatus() === Game.STATUS.PLAYING) {\n      const size = this.state.length;\n      let moved = false;\n\n      for (let col = 0; col < size; col++) {\n        const newColumn = [];\n\n        for (let row = 0; row < size; row++) {\n          if (this.state[row][col] !== 0) {\n            newColumn.push(this.state[row][col]);\n          }\n        }\n\n        for (let i = 0; i < newColumn.length - 1; i++) {\n          if (newColumn[i] === newColumn[i + 1]) {\n            newColumn[i] *= 2;\n            this.score += newColumn[i];\n            newColumn.splice(i + 1, 1);\n          }\n        }\n\n        while (newColumn.length < size) {\n          newColumn.push(0);\n        }\n\n        for (let row = 0; row < size; row++) {\n          if (this.state[row][col] !== newColumn[row]) {\n            this.state[row][col] = newColumn[row];\n            moved = true;\n          }\n        }\n      }\n\n      this.handleMove(moved);\n    }\n  }\n\n  moveDown() {\n    if (this.getStatus() === Game.STATUS.PLAYING) {\n      const size = this.state.length;\n      let moved = false;\n\n      for (let col = 0; col < size; col++) {\n        const newColumn = [];\n\n        for (let row = 0; row < size; row++) {\n          if (this.state[row][col] !== 0) {\n            newColumn.push(this.state[row][col]);\n          }\n        }\n\n        const merged = Array(newColumn.length).fill(false);\n\n        for (let i = newColumn.length - 1; i > 0; i--) {\n          if (\n            newColumn[i] === newColumn[i - 1] &&\n            !merged[i] &&\n            !merged[i - 1]\n          ) {\n            newColumn[i] *= 2;\n            this.score += newColumn[i];\n            newColumn.splice(i - 1, 1);\n            merged[i] = true;\n          }\n        }\n\n        while (newColumn.length < size) {\n          newColumn.unshift(0);\n        }\n\n        for (let row = 0; row < size; row++) {\n          if (this.state[row][col] !== newColumn[row]) {\n            this.state[row][col] = newColumn[row];\n            moved = true;\n          }\n        }\n      }\n\n      this.handleMove(moved);\n    }\n  }\n}\n\nmodule.exports = Game;\n","function _class_call_check(instance, Constructor) {\n    if (!(instance instanceof Constructor)) throw new TypeError(\"Cannot call a class as a function\");\n}\nexport { _class_call_check as _ };\n","function _defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n\n        if (\"value\" in descriptor) descriptor.writable = true;\n\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\nfunction _create_class(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n\n    return Constructor;\n}\nexport { _create_class as _ };\n","function _define_property(obj, key, value) {\n    if (key in obj) {\n        Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });\n    } else obj[key] = value;\n\n    return obj;\n}\nexport { _define_property as _ };\n","import { _ as _array_with_holes } from \"./_array_with_holes.js\";\nimport { _ as _iterable_to_array_limit } from \"./_iterable_to_array_limit.js\";\nimport { _ as _non_iterable_rest } from \"./_non_iterable_rest.js\";\nimport { _ as _unsupported_iterable_to_array } from \"./_unsupported_iterable_to_array.js\";\n\nfunction _sliced_to_array(arr, i) {\n    return _array_with_holes(arr) || _iterable_to_array_limit(arr, i) || _unsupported_iterable_to_array(arr, i) || _non_iterable_rest();\n}\nexport { _sliced_to_array as _ };\n","function _array_with_holes(arr) {\n    if (Array.isArray(arr)) return arr;\n}\nexport { _array_with_holes as _ };\n","function _iterable_to_array_limit(arr, i) {\n    var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n\n    if (_i == null) return;\n\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _s, _e;\n\n    try {\n        for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n            _arr.push(_s.value);\n            if (i && _arr.length === i) break;\n        }\n    } catch (err) {\n        _d = true;\n        _e = err;\n    } finally {\n        try {\n            if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n        } finally {\n            if (_d) throw _e;\n        }\n    }\n\n    return _arr;\n}\nexport { _iterable_to_array_limit as _ };\n","function _non_iterable_rest() {\n    throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nexport { _non_iterable_rest as _ };\n","import { _ as _array_like_to_array } from \"./_array_like_to_array.js\";\n\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nexport { _unsupported_iterable_to_array as _ };\n","function _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n\n    for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n    return arr2;\n}\nexport { _array_like_to_array as _ };\n","import { _ as _array_without_holes } from \"./_array_without_holes.js\";\nimport { _ as _iterable_to_array } from \"./_iterable_to_array.js\";\nimport { _ as _non_iterable_spread } from \"./_non_iterable_spread.js\";\nimport { _ as _unsupported_iterable_to_array } from \"./_unsupported_iterable_to_array.js\";\n\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nexport { _to_consumable_array as _ };\n","import { _ as _array_like_to_array } from \"./_array_like_to_array.js\";\n\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nexport { _array_without_holes as _ };\n","function _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) {\n        return Array.from(iter);\n    }\n}\nexport { _iterable_to_array as _ };\n","function _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nexport { _non_iterable_spread as _ };\n"],"names":["$c3b10a83b523f372$export$71511d61b312f219","arr","len","length","i","arr2","Array","$d4f69c5c6c4654b1$export$71511d61b312f219","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","from","test","$227c6742e0ff6f82$export$71511d61b312f219","isArray","iter","Symbol","iterator","TypeError","key","value","$3d28d7f1aac198f5$var$Game","protoProps","Game","initialState","arguments","instance","Constructor","status","STATUS","IDLE","score","state","map","row","PLAYING","addNewNumber","emptyPositions","getEmptyPositions","randomIndex","Math","floor","random","_emptyPositions_randomIndex","_s","_e","_i","_arr","_n","_d","next","done","push","err","col","some","includes","moved","toWin","WIN","toLose","LOSE","size","newRow","merged","fill","splice","col1","handleMove","unshift","getStatus","newColumn","row1","$4fc75ccb937ab1df$var$_defineProperties","target","props","descriptor","enumerable","configurable","writable","defineProperty","obj","$197cd56b15c33885$var$game","$197cd56b15c33885$var$_ref","startButton","document","querySelector","gameScore","gameBoardRows","querySelectorAll","messageLose","messageWin","messageStart","$197cd56b15c33885$var$startButton","$197cd56b15c33885$var$gameScore","$197cd56b15c33885$var$gameBoardRows","$197cd56b15c33885$var$messageLose","$197cd56b15c33885$var$messageWin","$197cd56b15c33885$var$messageStart","$197cd56b15c33885$var$updateGameFields","getState","forEach","rowIndex","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","cells","cell","textContent","className","cellIndex","cellValue","classList","add","concat","return","$197cd56b15c33885$var$updateMessage","remove","$197cd56b15c33885$var$updateScore","getScore","$197cd56b15c33885$var$isFirstMove","addEventListener","start","restart","e","moveLeft","moveRight","moveUp","moveDown"],"version":3,"file":"index.3b6c5a4c.js.map"}